<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
	<appSettings>
		<add key="ConnectionString" value="Server=192.168.1.165;uid=sa;pwd=10296;database=cherp_yuncai"/><!--
		<add key="ConnectionString" value="Server=192.168.1.118;uid=gyremote;pwd=remotegy;database=cherp_yuncai"/>
		<add key="dbtype" value="mssql"/>
		--><!--数据库连接 Session名称--><!--
		--><!--<add key="ConnSession" value="ConnString"/>--><!--
		--><!--DbType Session名称--><!--
		<add key="DbTypeSession" value="DbType"/>
		<add key="isDes" value="N"/>
    <add key="debug" value="N"/>-->
    <add key="dbtype" value="mssql"/>
    <add key="PostUrl" value="http://wintop.gysoft.cn:8000/login4/of_getdbinfo.php"/>
    <!--数据库连接 Session名称-->
    <add key="ConnSession" value="ConnString_Wap"/>
    <!--DbType Session名称-->
    <add key="DbTypeSession" value="DbType_Wap"/>
    <add key="isDes" value="N"/>
    <add key="RedisTimeOut" value="36000"/>
    <add key="RedisPass" value=""/>
    <add key="RedisPort" value="6379"/>
    <add key="RedisHost" value="192.168.1.33"/>
    <add key="LogLevel" value="9"/>
    <add key="debug" value="N"/>
	</appSettings>
	<connectionStrings/>
	<system.web>
		<!-- 
            设置 compilation debug="true" 将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
		<httpRuntime requestValidationMode="2.0"/>
		<sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;Trusted_Connection=yes" cookieless="false" timeout="40"/>
		<pages validateRequest="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
		</pages>
		<!--
            通过 <authentication> 节可以配置 ASP.NET 使用的 
            安全身份验证模式，
            以标识传入的用户。 
        -->
		<authentication mode="Windows"/>
		<!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。
 -->
		<customErrors mode="Off" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm"/>
			<error statusCode="404" redirect="FileNotFound.htm"/>
		</customErrors>
		<compilation debug="true"/>
    <httpHandlers>
      <add verb="POST,GET" path="ajax/*.ashx" type="Ajax.PageHandlerFactory, Ajax" />
    </httpHandlers>
    <globalization requestEncoding="UTF-8" responseEncoding="UTF-8" fileEncoding="UTF-8"/>
  </system.web>
 <system.serviceModel>
  <behaviors>
   <serviceBehaviors>
    <behavior name="">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>
  <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
 </system.serviceModel>
</configuration>
